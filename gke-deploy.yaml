kind: ConfigMap
apiVersion: v1
metadata:
  name: haproxy-config
data:
  haproxy.cfg: |
    global
      # log to stdout
      log stdout format raw local0 debug
      stats socket ipv4@127.0.0.1:9999 level admin
      stats socket /var/run/hapee-lb.sock mode 666 level admin
      stats timeout 2m


    defaults
      log               global
      option            httplog
      retries           3
      maxconn           2000
      timeout connect   50s
      timeout client    50s
      timeout server    50s
      timeout client-fin 30s
      timeout tunnel 10h

    resolvers kube-dns
      # kubernetes DNS is defined in resolv.conf
      parse-resolv-conf
      hold valid 10s

    frontend  main
      bind *:80
      mode http
    
      
      option http-keep-alive
      http-request add-header X-Random %[rand(100)]
      http-request capture req.hdr(X-Random) len 100
    
      http-request add-header project PROJECT_ID_1 if { req.hdr(X-Random) -m int ge 50 }
      http-request add-header project PROJECT_ID_2 if { req.hdr(X-Random) -m int lt 50 }
      http-request add-header model claude-3-5-sonnet@20240620
      
      acl url_v1 path_beg -i /v1
      acl url_sonnet path_beg -i /us/sonnet
      acl url_eu path_beg -i /eu/sonnet
      use_backend v1 if url_v1
      use_backend acct_us if url_sonnet
      use_backend acct_eu if url_eu
    
    backend acct_us
      mode http
      option tcp-check
      retry-on 429
      retries 1
      http-request set-path /v1/projects/%[req.hdr(project)]/locations/us-east5/publishers/anthropic/models/%[req.hdr(model)]:streamRawPredict
      http-request set-header host us-east5-aiplatform.googleapis.com
      http-request del-header project
      http-request del-header model
      server us us-east5-aiplatform.googleapis.com:443 check ssl verify none 
      use_backend acct_eu if { status 429 }
    
    backend acct_eu
      mode http
      option tcp-check
      retry-on 429
      retries 1
      http-request set-path /v1/projects/%[req.hdr(project)]/locations/europe-west1/publishers/anthropic/models/%[req.hdr(model)]:streamRawPredict
      http-request set-header host europe-west1-aiplatform.googleapis.com
      http-request del-header project
      http-request del-header model
      server eu europe-west1-aiplatform.googleapis.com:443 check ssl verify none 
    
    backend v1
      mode http
      option redispatch 2
      balance roundrobin
      retry-on 429
      retries 1
      server us_01 unix@/run/haproxy/01.sock weight 10
      server eu_02 unix@/run/haproxy/02.sock weight 10
    
    listen us_01
      mode http
      no log
      bind unix@/run/haproxy/01.sock
      use_backend acct_us
    
    listen eu_02
      mode http
      no log
      bind unix@/run/haproxy/02.sock
      use_backend acct_eu
    

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-deployment
spec:
  selector:
    matchLabels:
      app: proxy
  replicas: 1 # Update the replicas from 2 to 4
  template:
    metadata:
      labels:
        app: proxy
    spec:
      containers:
        - name: haproxy
          image: IMAGE_URL
          command: [ "/bin/sh", "-c" ]
          args:
              - /docker-entrypoint.sh haproxy -f /usr/local/etc/haproxy/haproxy.cfg -d
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/local/etc/haproxy/haproxy.cfg
              name: haproxy-config
              subPath: haproxy.cfg
      volumes:
        - name: haproxy-config
          configMap:
            name: haproxy-config
            items:
              - key: haproxy.cfg
                path: haproxy.cfg
---
apiVersion: v1
kind: Service
metadata:
  name: vertex-ai-claude-load-balancer
spec:
  selector:
    app: proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
